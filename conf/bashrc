# -*- shell-script -*-

# ------------------------------------------------------------------------------
# Behaviour
# ------------------------------------------------------------------------------
## History
export HISTIGNORE="&:ls:cd:[bf]g:rm *:rm -rf *:rm -f *:exit"

## Disable $ escaping
shopt -s direxpand


# ------------------------------------------------------------------------------
# Exports
# ------------------------------------------------------------------------------

## Editors
export EDITOR="emacs --no-window-system"

## Language
export LC_ALL=C.UTF-8
export LANG=C.UTF-8

## PS1
# Git
GIT_PS1_SHOWDIRTYSTATE='y'
GIT_PS1_SHOWSTASHSTATE='y'
GIT_PS1_SHOWUNTRACKEDFILES='y'
GIT_PS1_DESCRIBE_STYLE='contains'
GIT_PS1_SHOWUPSTREAM='auto'
PS1='\[\033[01;34m\][\[\033[01;35m\]\u@\h\[\033[01;34m\] \W]$(__git_ps1 "\[\033[01;34m\][\[\033[01;33m\]%s\[\033[01;34m\]]")[\[\033[01;31m\]\j\[\033[01;34m\]]\$\[\033[00m\] '

## PATH
export PATH="${HOME}/bin:${USER_DIR}/bin:${PATH}"


# ------------------------------------------------------------------------------
# Aliases
# ------------------------------------------------------------------------------

# Git
alias gst='git status'
alias gbr='git checkout -b'
alias gdi='git diff'
alias gp="git stash; git pull; git pop"
function gci() {
    git commit -am "$(echo -n $@)"
}

# bashrc
alias vibashrc="emacs ${USER_DIR}/conf/bashrc && . ${HOME}/.bashrc"

# Better defaults
alias emacs='\emacs --no-window-system'
alias rm='\rm -i'
alias grep='\grep --color'
alias ls='\ls --color=auto'
alias dmesg='\dmesg --human --nopager'
alias diff='\diff -wu --color'
alias jq='\jq -C'

# Lazy
alias e="${EDITOR}"

# Docker
alias dk=docker
alias dktail='\docker logs -n 10 -f'
alias dkup='\docker compose up -d'

# Utils
alias trash='\rm -vf *~ .??*~ \#*\#; true'

mkcd() {
  mkdir -p "$1" && cd "$1"
}

tssh() {
  tmux new-window -n "$1" ssh "$1"
}

backup() {
  cp -v "$1" "${1}.pre-$(date -I)"
}


# ------------------------------------------------------------------------------
# Local config
# ------------------------------------------------------------------------------
if [[ -d "$USER_DIR/conf/bashrc.d" ]]; then
    for f in "$USER_DIR/conf/bashrc.d/"*; do
	. "$f"
    done
fi
